#========== Location Specific Settings ==========#

export QUESTA_HOME      ?= /u/release/2020.2/questasim
export VIS_HOME         ?= /u/release/2020.2/visualizer
export CODELINK_HOME    ?= /project/codelink_qa/codelink_homes/codelink_home_2020.1_ixl
export IBEX_HOME        ?= ../../ibex_rtl
export CATAPULT_HOME    ?= /wv/hlsb/CATAPULT/10.5a/PRODUCTION/aol/Mgc_home
export GCC_HOME         ?= /home/russk/accelerator/cat_accel_design/tools/gcc-arm-none-eabi-9-2019-q4-major

#================================================#


#=== Tools

VLOG          = $(QUESTA_HOME)/bin/vlog
VSIM          = $(QUESTA_HOME)/bin/vsim
VLIB          = $(QUESTA_HOME)/bin/vlib
VMAP          = $(QUESTA_HOME)/bin/vmap

CC            = gcc
CPP           = g++

#=== Flags and settings

MTI_VCO_MODE  = 32

VLOG_FLAGS    = +acc=all +incdir+$(IBEX_HOME)/rtl +incdir+$(HW_SOURCES) +define+TRACE_EXECUTION -$(MTI_VCO_MODE)
VSIM_FLAGS    = -voptargs=+acc -work work -L ibex_lib

QUIET_FLAG    = --no-print-directory

#=== Source directories

HW_SOURCES    = ../hw
DESIGNS       = ../designs
TERMINAL      = ../terminal

#=== Working and scratch directories

markers       = ./markers
work_dir      = ./work


CRUFT         = work                 \
		$(markers)/*         \
		$(markers)           \
		transcript           \
		vsim.wlf             \
		modelsim.ini         \
		trace_core*.log      \
		wlf*                 \
		terminal.so          \
		run.do               \
		run.do.template      \
		make.out

.EXPORT_ALL_VARIABLES:

all:
	@echo " " 
	@echo " Valid make targets are: " 
	@echo "   make run_fib    - runs a Fibonacci assembly program on the RISC-V CPU  " 
	@echo "   make run_hello  - says 'hello' " 
	@echo "   make run_mac    - runs a simple multiply/accumulate unit generated by Catapult " 
	@echo "   make run_conv   - runs a 2-D convolution in a Catapult accelerator " 
	@echo " "
	@echo "   make clean "
	@echo "   make clean_fib   - cleans fibonacci project "
	@echo "   make clean_hello - cleans hello project "
	@echo "   make clean_mac   - cleans mac project "
	@echo "   make clean_conv  - cleans conv project "
	@echo "   make clean_ibex  - removes ibex questa library "
	@echo " "
	@echo " "


compile: work  \
	$(markers) \
	$(markers)/arbiter.sv.mark \
	$(markers)/bus_fifo.sv.mark \
	$(markers)/uart.sv.mark \
	$(markers)/char_in.sv.mark \
	$(markers)/char_out.sv.mark \
	$(markers)/chip_select.sv.mark \
	$(markers)/mux.sv.mark \
	$(markers)/sram.sv.mark \
	$(markers)/timer.sv.mark \
	$(markers)/tbench.sv.mark \
	$(markers)/top.sv.mark \
	./terminal.so \
	$(TERMINAL)/bin/terminal_emulator \
	ibex_lib

ibex_lib:
	@echo "MAKE    ibex_lib"
	@make -f Makefile.ibex_lib ibex_lib $(QUIET_FLAG)

#=== Include project specific makefiles ===#

include *.mk

#=== Launch Questa ===#

run.do.template:
	@echo "mem load -filldata 0  /tbench/t0/s0/mem" > run.do.template
	@echo "mem load -infile APP_CODE -format hex /tbench/t0/s0/mem" >> run.do.template
	@echo "do wave.do" >> run.do.template
	@echo "run 25 ms" >> run.do.template

#=== Hardware compilation ===#

$(work_dir): 
	@echo "VLIB    $(work_dir)"
	@$(VLIB) $(work_dir) >> make.out
	@echo "VMAP    work $(work_dir)"
	@$(VMAP) work $(work_dir) >> make.out


$(markers):
	@echo "MKDIR   $(markers)"
	@mkdir $(markers) >> make.out
	@touch $(markers)

#====== Generic compile rules ======

$(object_dir)/%.o: %.cpp
	@echo "CC      $<"
	@$(GCC) $(CFLAGS) $(INCLUDES) -c -o $@ $< >> make.out

$(markers)/%.sv.mark: $(HW_SOURCES)/%.sv
	@echo "VLOG    $<"
	@$(VLOG) $(VLOG_FLAGS) $< >> make.out
	@touch $@

$(markers)/%.v.mark: $(HW_SOURCES)/%.v
	@echo "VLOG    $<"
	@$(VLOG) $(VLOG_FLAGS) $< >> make.out
	@touch $@

$(markers)/%.sc.mark: %.cpp
	@echo "SCCOM   $<"
	@$(SCCOM) $(SCCOM_FLAGS) $(DEFINES) -D QUESTA -D MATCHLIB $<
	@touch $@

$(markers)/cat_accel: $(markers)
	@touch ./$(markers)/cat_accel


#=== Clean-up

clean:
	@echo "Removing created files and cruft"
	@rm -rf $(CRUFT)

clean_ibex:
	@make -f Makefile.ibex_lib clean $(QUIET_FLAG)

clean_all: clean clean_ibex clean_fib clean_hello clean_mac clean_conv
	

#=== Support programs

terminal.so: $(TERMINAL)/dpi/terminal.c 
	@echo "CC      terminal.c "
	@$(CC) -DVSIM -fPIC -shared -o terminal.so $(TERMINAL)/dpi/terminal.c -I $(QUESTA_HOME)/include -I ./ -m$(MTI_VCO_MODE) >> make.out

$(TERMINAL)/bin/terminal_emulator: $(TERMINAL)/dpi/terminal_emulator.c
	@echo "CC      terminal_emulator.c "
	@$(CC) -o $(TERMINAL)/bin/terminal_emulator $(TERMINAL)/dpi/terminal_emulator.c -lpthread -m$(MTI_VCO_MODE) >> make.out
